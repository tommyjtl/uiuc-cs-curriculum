{
    "CS 400": {
        "course_code": "400",
        "course_name": "Accelerated Fundamentals of Computing I",
        "course_hour": "3 Hours",
        "course_description": "The first class in a sequence of two classes that introduces students to the basic concepts in computing with an emphasis on the fundamental techniques for solving computational problems. Topics include: core programming concepts (variables, data types, conditional expressions, loops, functions), basic data structures, searching and sorting algorithms, and data exploration and visualization. No prior programming experience is required. No undergraduate credit. 3 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "Current enrollment in the Illinois Computing Accelerator for Non-specialists (iCAN) program or consent of instructor. Restricted to post-baccalaureate students with a non-computing background.",
            "prerequisites": [
                []
            ]
        }
    },
    "CS 401": {
        "course_code": "401",
        "course_name": "Accelerated Fundamentals of Algorithms I",
        "course_hour": "3 Hours",
        "course_description": "The first class in a sequence of two classes that introduces students to the theoretical foundations of computer science. Topics include counting, sets, functions, decision trees, recursion, binary numbers, basic graph theory, depth first search and breadth first search, algorithms for computing shortest paths, data structures like stacks and queues, big O notation and asymptotic analysis, complexity classes like P and NP, and reductions. No undergraduate credit. 3 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "Current enrollment in the Illinois Computing Accelerator for Non-specialists (iCAN) program or consent of instructor. Restricted to post- baccalaureate students with a non-computing background.",
            "prerequisites": [
                []
            ]
        }
    },
    "CS 402": {
        "course_code": "402",
        "course_name": "Accelerated Fundamentals of Computing II",
        "course_hour": "3 Hours",
        "course_description": "Provides an accelerated introduction to class-based program design and the design of abstractions that support the design of reusable software and libraries. It reviews typical object-oriented concepts such as information hiding, encapsulation, polymorphism, inheritance, composition, and common design patterns. The course will also covers exception handling, database programming, and concurrent programming. No undergraduate credit. 3 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 400 or consent of instructor. Current enrollment in the Illinois Computing Accelerator for Non-specialists (iCAN) program or consent of instructor. Restricted to post-baccalaureate students with a non-computing background.",
            "prerequisites": [
                [
                    "CS 400"
                ]
            ]
        }
    },
    "CS 403": {
        "course_code": "403",
        "course_name": "Accelerated Fundamentals of Algorithms II",
        "course_hour": "3 Hours",
        "course_description": "The second class in a sequence of two classes that introduces students to the theoretical foundations of computer science. Topics include major paradigms of algorithm design divide and conquer, greedy, recursive, and dynamic programming; solving recurrences and analysis of divide and conquer algorithms; graph algorithms; formal models of computations like finite state automata and Turing machines; reductions. No undergraduate credit. 3 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 401 or consent of instructor. Current enrollment in the Illinois Computing Accelerator for Non-specialists (iCAN) program or consent of instructor. Restricted to post-baccalaureate students with a non-computing background.",
            "prerequisites": [
                [
                    "CS 401"
                ]
            ]
        }
    },
    "CS 407": {
        "course_code": "407",
        "course_name": "Cryptography",
        "course_hour": "3 or 4 Hours",
        "course_description": "Same as ECE 407. See ECE 407.",
        "course_prerequisites": {
            "raw_text": "",
            "prerequisites": []
        }
    },
    "CS 409": {
        "course_code": "409",
        "course_name": "The Art of Web Programming",
        "course_hour": "3 or 4 Hours",
        "course_description": "Client- and server-side technologies that enable modern Web applications. Topics include the building blocks of the Web (browsers, HTML, CSS, JavaScript) and data exchange (HTTP, AJAX, JSON, REST). Assignments expose students to full-stack web development, and JavaScript frameworks that scaffold MVC architectures and event-driven, asynchronous programming. The course culminates in a final project, where students work in teams to design and develop an original, database-backed web application. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225.",
            "prerequisites": [
                [
                    "CS 225"
                ]
            ]
        }
    },
    "CS 410": {
        "course_code": "410",
        "course_name": "Text Information Systems",
        "course_hour": "3 or 4 Hours",
        "course_description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225.",
            "prerequisites": [
                [
                    "CS 225"
                ]
            ]
        }
    },
    "CS 411": {
        "course_code": "411",
        "course_name": "Database Systems",
        "course_hour": "3 or 4 Hours",
        "course_description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225.",
            "prerequisites": [
                [
                    "CS 225"
                ]
            ]
        }
    },
    "CS 412": {
        "course_code": "412",
        "course_name": "Introduction to Data Mining",
        "course_hour": "3 or 4 Hours",
        "course_description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225.",
            "prerequisites": [
                [
                    "CS 225"
                ]
            ]
        }
    },
    "CS 413": {
        "course_code": "413",
        "course_name": "Intro to Combinatorics",
        "course_hour": "3 or 4 Hours",
        "course_description": "Same as MATH 413. See MATH 413.",
        "course_prerequisites": {
            "raw_text": "",
            "prerequisites": []
        }
    },
    "CS 414": {
        "course_code": "414",
        "course_name": "Multimedia Systems",
        "course_hour": "3 or 4 Hours",
        "course_description": "Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "One of CS 240, CS 241, CS 340, CS 341 or ECE 391.",
            "prerequisites": [
                [
                    "CS 240",
                    "CS 241",
                    "CS 340",
                    "CS 341",
                    "ECE 391"
                ]
            ]
        }
    },
    "CS 415": {
        "course_code": "415",
        "course_name": "Game Development",
        "course_hour": "3 or 4 Hours",
        "course_description": "A team and project-based course on the technical aspects of video game development and game engine internals: geometric modeling, game physics and AI, shader programming, real-time physically based rendering, and software engineering practices within the game industry. The central focus of the course is the development of a game by teams of 3 to 5 students. The course strongly emphasizes code development using a modern game engine. Students will gain skills necessary to develop games and to develop game engines. 3 undergraduate hours. 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225.",
            "prerequisites": [
                [
                    "CS 225"
                ]
            ]
        }
    },
    "CS 416": {
        "course_code": "416",
        "course_name": "Data Visualization",
        "course_hour": "3 or 4 Hours",
        "course_description": "Elements of databases, computer graphics and perceptual psychology combined to utilize the human visual system to improve user understanding of large datasets. Topics include appropriate and effective selection and construction of charts, organization of dashboards, and design for user engagement and interaction. 3 undergraduate hours. 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225.",
            "prerequisites": [
                [
                    "CS 225"
                ]
            ]
        }
    },
    "CS 417": {
        "course_code": "417",
        "course_name": "Virtual Reality",
        "course_hour": "3 or 4 Hours",
        "course_description": "Provides both a deep understanding of the fundamentals of virtual reality (VR) and practical experience implementing VR systems. Topics covered include visual and audio display technology, tracking, human perception and psychophysics, building user interfaces for VR, and analyzing VR experiences. 3 undergraduate hours. 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225.",
            "prerequisites": [
                [
                    "CS 225"
                ]
            ]
        }
    },
    "CS 418": {
        "course_code": "418",
        "course_name": "Interactive Computer Graphics",
        "course_hour": "3 or 4 Hours",
        "course_description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225; One of MATH 225, MATH 257, MATH 415, MATH 416, ASRM 406, or BIOE 210; MATH 241.",
            "prerequisites": [
                [
                    "CS 225"
                ],
                [
                    "MATH 225",
                    "MATH 257",
                    "MATH 415",
                    "MATH 416",
                    "ASRM 406",
                    "BIOE 210"
                ],
                [
                    "MATH 241"
                ]
            ]
        }
    },
    "CS 419": {
        "course_code": "419",
        "course_name": "Production Computer Graphics",
        "course_hour": "3 or 4 Hours",
        "course_description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 418 or CSE 427.",
            "prerequisites": [
                [
                    "CS 418",
                    "CSE 427"
                ]
            ]
        }
    },
    "CS 420": {
        "course_code": "420",
        "course_name": "Parallel Progrmg: Sci & Engrg",
        "course_hour": "3 or 4 Hours",
        "course_description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225.",
            "prerequisites": [
                [
                    "CS 225"
                ]
            ]
        }
    },
    "CS 421": {
        "course_code": "421",
        "course_name": "Programming Languages & Compilers",
        "course_hour": "3 or 4 Hours",
        "course_description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "One of CS 233, CS 240 or CS 340; CS 374 or ECE 374; one of MATH 225, MATH 257, MATH 415, MATH 416, ASRM 406, BIOE 210.",
            "prerequisites": [
                [
                    "CS 233",
                    "CS 240",
                    "CS 340"
                ],
                [
                    "CS 374",
                    "ECE 374"
                ],
                [
                    "MATH 225"
                ],
                [
                    "MATH 257"
                ],
                [
                    "MATH 415"
                ],
                [
                    "MATH 416"
                ],
                [
                    "ASRM 406"
                ],
                [
                    "BIOE 210"
                ]
            ]
        }
    },
    "CS 422": {
        "course_code": "422",
        "course_name": "Programming Language Design",
        "course_hour": "3 or 4 Hours",
        "course_description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 421.",
            "prerequisites": [
                [
                    "CS 421"
                ]
            ]
        }
    },
    "CS 423": {
        "course_code": "423",
        "course_name": "Operating Systems Design",
        "course_hour": "3 or 4 Hours",
        "course_description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "One of CS 241, CS 341, or ECE 391.",
            "prerequisites": [
                [
                    "CS 241",
                    "CS 341",
                    "ECE 391"
                ]
            ]
        }
    },
    "CS 424": {
        "course_code": "424",
        "course_name": "Real-Time Systems",
        "course_hour": "3 or 4 Hours",
        "course_description": "Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "One of CS 241, CS 341 or ECE 391.",
            "prerequisites": [
                [
                    "CS 241",
                    "CS 341",
                    "ECE 391"
                ]
            ]
        }
    },
    "CS 425": {
        "course_code": "425",
        "course_name": "Distributed Systems",
        "course_hour": "3 or 4 Hours",
        "course_description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 or 4 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "Credit or concurrent enrollment in one of CS 240, CS 241, CS 340, CS 341 or ECE 391.",
            "prerequisites": [
                [
                    "CS 240",
                    "CS 241",
                    "CS 340",
                    "CS 341",
                    "ECE 391"
                ]
            ]
        }
    },
    "CS 426": {
        "course_code": "426",
        "course_name": "Compiler Construction",
        "course_hour": "3 or 4 Hours",
        "course_description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "Credit or concurrent enrollment in CS 421.",
            "prerequisites": [
                [
                    "CS 421"
                ]
            ]
        }
    },
    "CS 427": {
        "course_code": "427",
        "course_name": "Software Engineering I",
        "course_hour": "3 or 4 Hours",
        "course_description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "One of CS 222, CS 240, CS 241, CS 340, CS 341 or ECE 391.",
            "prerequisites": [
                [
                    "CS 222",
                    "CS 240",
                    "CS 241",
                    "CS 340",
                    "CS 341",
                    "ECE 391"
                ]
            ]
        }
    },
    "CS 428": {
        "course_code": "428",
        "course_name": "Software Engineering II",
        "course_hour": "3 or 4 Hours",
        "course_description": "Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 427 or CSE 426.",
            "prerequisites": [
                [
                    "CS 427",
                    "CSE 426"
                ]
            ]
        }
    },
    "CS 429": {
        "course_code": "429",
        "course_name": "Software Engineering II, ACP",
        "course_hour": "3 Hours",
        "course_description": "Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 3 undergraduate hours. 3 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 427 or CSE 426.This course satisfies the General Education Criteria for:Advanced Composition",
            "prerequisites": [
                [
                    "CS 427",
                    "CSE 426"
                ]
            ]
        }
    },
    "CS 431": {
        "course_code": "431",
        "course_name": "Embedded Systems",
        "course_hour": "3 or 4 Hours",
        "course_description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "One of CS 241, CS 341 or ECE 391. Students must register for one lab and one lecture section.",
            "prerequisites": [
                [
                    "CS 241",
                    "CS 341",
                    "ECE 391"
                ]
            ]
        }
    },
    "CS 433": {
        "course_code": "433",
        "course_name": "Computer System Organization",
        "course_hour": "3 or 4 Hours",
        "course_description": "Computer hardware design and analysis and interface with software. Advanced processor design, including superscalar, out-of-order issue, branch prediction, and speculation. Memory hierarchy design, including advanced cache optimizations, main memory, and virtual memory. Principles of multiprocessor design, including shared-memory, cache coherence, synchronization, and consistency. Other advanced topics depending on time; e.g., GPUs and accelerators, warehouse computers and data centers, security. Same as CSE 422. 3 undergraduate hours. 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 233.",
            "prerequisites": [
                [
                    "CS 233"
                ]
            ]
        }
    },
    "CS 434": {
        "course_code": "434",
        "course_name": "Mobile Computing & Application",
        "course_hour": "3 or 4 Hours",
        "course_description": "Same as ECE 434. See ECE 434.",
        "course_prerequisites": {
            "raw_text": "",
            "prerequisites": []
        }
    },
    "CS 435": {
        "course_code": "435",
        "course_name": "Cloud Networking",
        "course_hour": "3 or 4 Hours",
        "course_description": "Provides a foundational view of computer networks with a focus on enabling modern large-scale cloud computing. The first part of this course studies the principles upon which the Internet and other networks are built, and how those principles translate into deployed protocols. The second part covers how those principles are applied in network infrastructure for modern clouds, enabling deployment of virtual networks on shared infrastructure, efficient transfer of big data and low latency communication, and federation of applications across countries and continents. 3 undergraduate hours. 4 graduate hours. Credit is not given for both CS 435 and CS 438/ECE 438. ",
        "course_prerequisites": {
            "raw_text": "One of CS 240, CS 241, CS 340, CS 341 or ECE 391.",
            "prerequisites": [
                [
                    "CS 240",
                    "CS 241",
                    "CS 340",
                    "CS 341",
                    "ECE 391"
                ]
            ]
        }
    },
    "CS 436": {
        "course_code": "436",
        "course_name": "Computer Networking Laboratory",
        "course_hour": "3 or 4 Hours",
        "course_description": "Design, application, analysis, and deployment of communication protocols and system software behind modern cloud/compute/network infrastructures. Students learn the internals of modern system infrastructures, including operating system networking kernels, cloud application service code, and firewall and router configuration. Students will gain experience with widely-used and production-grade code and systems, such as Cisco IOS, the Linux networking stack, and Amazon Web Services. This class links theory with practice to prepare students to confidently carry out tasks they will commonly encounter in industry, such as building an enterprise network, deploying a large-scale cloud service, or implementing a new network protocol. Same as ECE 435. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "One of CS 240, CS 241, CS 340, CS 341 or ECE 391.",
            "prerequisites": [
                [
                    "CS 240",
                    "CS 241",
                    "CS 340",
                    "CS 341",
                    "ECE 391"
                ]
            ]
        }
    },
    "CS 437": {
        "course_code": "437",
        "course_name": "Topics in Internet of Things",
        "course_hour": "3 or 4 Hours",
        "course_description": "Topics of networked embedded computing technology, known as the Internet of Things, in application, distributed, human-centric, or social contexts. The tight coupling between people, networking protocols, computing elements, and physical things in IoT systems presents unique challenges for data collection, processing in constrained computation and communication environments. Introduces general principles of IoT systems and protocol, offers broad foundations for IoT services, and allows specialization to pursue an in-depth understanding of selected IoT aspects or subtopics. 3 undergraduate hours. 4 graduate hours. May be repeated if topics vary. Credit towards a degree from multiple offerings of this course is not given if those offerings have significant overlap, as determined by the CS department. ",
        "course_prerequisites": {
            "raw_text": "CS 241 or CS 341. Additional prerequisites may be specified each term. See section information.",
            "prerequisites": [
                [
                    "CS 241",
                    "CS 341"
                ]
            ]
        }
    },
    "CS 438": {
        "course_code": "438",
        "course_name": "Communication Networks",
        "course_hour": "3 or 4 Hours",
        "course_description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "One of CS 241, CS 341 or ECE 391; strongly recommend one of CS 361, STAT 361, ECE 313, MATH 362, MATH 461, MATH 463 or STAT 400.",
            "prerequisites": [
                [
                    "CS 241",
                    "CS 341",
                    "ECE 391"
                ],
                [
                    "CS 361",
                    "STAT 361",
                    "ECE 313",
                    "MATH 362",
                    "MATH 461",
                    "MATH 463",
                    "STAT 400"
                ]
            ]
        }
    },
    "CS 439": {
        "course_code": "439",
        "course_name": "Wireless Networks",
        "course_hour": "3 or 4 Hours",
        "course_description": "Same as ECE 439. See ECE 439.",
        "course_prerequisites": {
            "raw_text": "",
            "prerequisites": []
        }
    },
    "CS 440": {
        "course_code": "440",
        "course_name": "Artificial Intelligence",
        "course_hour": "3 or 4 Hours",
        "course_description": "Major topics in and directions of research in artificial intelligence: basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225; one of CS 361, STAT 361, ECE 313, MATH 362, MATH 461, MATH 463, STAT 400 or BIOE 310.",
            "prerequisites": [
                [
                    "CS 225"
                ],
                [
                    "CS 361",
                    "STAT 361",
                    "ECE 313",
                    "MATH 362",
                    "MATH 461",
                    "MATH 463",
                    "STAT 400",
                    "BIOE 310"
                ]
            ]
        }
    },
    "CS 441": {
        "course_code": "441",
        "course_name": "Applied Machine Learning",
        "course_hour": "3 or 4 Hours",
        "course_description": "Techniques of machine learning to various signal problems: regression, including linear regression, multiple regression, regression forest and nearest neighbors regression; classification with various methods, including logistic regression, support vector machines, nearest neighbors, simple boosting and decision forests; clustering with various methods, including basic agglomerative clustering and k-means; resampling methods, including cross-validation and the bootstrap; model selection methods, including AIC, stepwise selection and the lasso; hidden Markov models; model estimation in the presence of missing variables; and neural networks, including deep networks. The course will focus on tool-oriented and problem-oriented exposition. Application areas include computer vision, natural language, interpreting accelerometer data, and understanding audio data. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225 and CS 361.",
            "prerequisites": [
                [
                    "CS 225"
                ],
                [
                    "CS 361"
                ]
            ]
        }
    },
    "CS 442": {
        "course_code": "442",
        "course_name": "Trustworthy Machine Learning",
        "course_hour": "3 or 4 Hours",
        "course_description": "Prepares students to understand the security and privacy problems in machine learning and educates students to propose different attack strategies to identify the vulnerabilities of a range of learning algorithms and understand different defense approaches towards trustworthy machine learning systems. Students will explore topics including basic machine learning foundations (e.g., linear regression and PCA), adversarial attacks against different learning algorithms, differential privacy, data valuation, and different categories of defenses. The lessons are reinforced via a series of topic-driven lectures, coding assignments, related paper readings, exams and in-class discussions. Students will learn to analyze current interactions between attackers and defenders on machine learning and therefore develop an understanding of the principles on trustworthy machine learning which is an emerging and important topic. Students will be required to finish three related homework projects, including 1) developing a machine learning classifier, 2) designing adversarial attacks against the built classifier, and 3) developing defenses to improve the robustness of the trained classifier against designed attacks. Students registered for 4 credit hours will also finish a final project based on the class topics, demonstrating their ability to propose related new algorithms based on the class subjects. 3 undergraduate hours. 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225; one of CS 440, ECE 448, CS 441, CS 446 or ECE 449; one of MATH 225, MATH 257, MATH 415, MATH 416, ASRM 406 or BIOE 210.",
            "prerequisites": [
                [
                    "CS 225"
                ],
                [
                    "CS 440",
                    "ECE 448",
                    "CS 441",
                    "CS 446",
                    "ECE 449"
                ],
                [
                    "MATH 225",
                    "MATH 257",
                    "MATH 415",
                    "MATH 416",
                    "ASRM 406",
                    "BIOE 210"
                ]
            ]
        }
    },
    "CS 443": {
        "course_code": "443",
        "course_name": "Reinforcement Learning",
        "course_hour": "3 or 4 Hours",
        "course_description": "Fundamental concepts and basic algorithms in Reinforcement Learning (RL) - a machine learning paradigm for sequential decision-making. The goal of this course is to enable students to (1) understand the mathematical framework of RL, (2) tell what problems can be solved with RL, and how to cast these problems into the RL formulation, (3) understand why and how RL algorithms are designed to work, and (4) know how to experimentally and mathematically evaluate the effectiveness of an RL algorithm. There will be both programming and written assignments. 3 undergraduate hours. 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225; MATH 241; one of MATH 225, MATH 257, MATH 415, MATH 416, ASRM 406 or BIOE 210; one of CS 361, STAT 361, ECE 313, MATH 362, MATH 461, MATH 463 or STAT 400.",
            "prerequisites": [
                [
                    "CS 225"
                ],
                [
                    "MATH 241"
                ],
                [
                    "MATH 225",
                    "MATH 257",
                    "MATH 415",
                    "MATH 416",
                    "ASRM 406",
                    "BIOE 210"
                ],
                [
                    "CS 361",
                    "STAT 361",
                    "ECE 313",
                    "MATH 362",
                    "MATH 461",
                    "MATH 463",
                    "STAT 400"
                ]
            ]
        }
    },
    "CS 444": {
        "course_code": "444",
        "course_name": "Deep Learning for Computer Vision",
        "course_hour": "3 or 4 Hours",
        "course_description": "Provides an elementary hands-on introduction to neural networks and deep learning with an emphasis on computer vision applications. Topics include: linear classifiers; multi-layer neural networks; back-propagation and stochastic gradient descent; convolutional neural networks and their applications to object detection and dense image labeling; recurrent neural networks and state-of-the-art sequence models like transformers; generative adversarial networks and variational autoencoders for image generation; and deep reinforcement learning. Coursework will consist of programming assignments in a common deep learning framework. Those registered for 4 credit hours will have to complete a project. 3 undergraduate hours. 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "MATH 241; one of MATH 225, MATH 257, MATH 415, MATH 416, ASRM 406, or BIOE 210; CS 225 or equivalent; one of CS 361, ECE 313, MATH 461 or STAT 400. No previous exposure to machine learning is required.",
            "prerequisites": [
                [
                    "MATH 241"
                ],
                [
                    "MATH 225",
                    "MATH 257",
                    "MATH 415",
                    "MATH 416",
                    "ASRM 406",
                    "BIOE 210"
                ],
                [
                    "CS 225"
                ],
                [
                    "CS 361",
                    "ECE 313",
                    "MATH 461",
                    "STAT 400"
                ]
            ]
        }
    },
    "CS 445": {
        "course_code": "445",
        "course_name": "Computational Photography",
        "course_hour": "3 or 4 Hours",
        "course_description": "Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225, MATH 225, and MATH 231.",
            "prerequisites": [
                [
                    "CS 225"
                ],
                [
                    "MATH 225"
                ],
                [
                    "MATH 231"
                ]
            ]
        }
    },
    "CS 446": {
        "course_code": "446",
        "course_name": "Machine Learning",
        "course_hour": "3 or 4 Hours",
        "course_description": "Principles and applications of machine learning. Main paradigms and techniques, including discriminative and generative methods, reinforcement learning: linear regression, logistic regression, support vector machines, deep nets, structured methods, dimensionality reduction, k-means, Gaussian mixtures, expectation maximization, Markov decision processes, and Q-learning. Application areas such as natural language and text understanding, speech recognition, computer vision, data mining, and adaptive computer systems, among others. Same as ECE 449. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225; One of MATH 225, MATH 257, MATH 415, MATH 416, ASRM 406 or BIOE 210; One of CS 361, ECE 313, MATH 461 or STAT 400.",
            "prerequisites": [
                [
                    "CS 225"
                ],
                [
                    "MATH 225",
                    "MATH 257",
                    "MATH 415",
                    "MATH 416",
                    "ASRM 406",
                    "BIOE 210"
                ],
                [
                    "CS 361",
                    "ECE 313",
                    "MATH 461",
                    "STAT 400"
                ]
            ]
        }
    },
    "CS 447": {
        "course_code": "447",
        "course_name": "Natural Language Processing",
        "course_hour": "3 or 4 Hours",
        "course_description": "Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 447 and LING 406. ",
        "course_prerequisites": {
            "raw_text": "CS 374.",
            "prerequisites": [
                [
                    "CS 374"
                ]
            ]
        }
    },
    "CS 448": {
        "course_code": "448",
        "course_name": "Audio Computing Laboratory",
        "course_hour": "3 or 4 Hours",
        "course_description": "Computational foundations of modern audio applications: theory of audio processing for implementation of applications such as room and 3D/virtual audio rendering, pitch manipulations and autotuning, denoising for communications and forensics, audio classification, music information retrieval based on audio, rudimentary speech recognition, speech and audio coding, applications of machine learning to audio scene recognition, audio restoration, missing data recovery, and many more. This will be a lab-like course in which students collectively implement a variety of core audio operations that are commonplace today. Students will be required to bring to class their laptops and headphones to participate in lab exercises. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "One of CS 241, CS 341, or ECE 391; one of MATH 225, MATH 257, MATH 415, MATH 416, ASRM 406, or BIOE 210.",
            "prerequisites": [
                [
                    "CS 241",
                    "CS 341",
                    "ECE 391"
                ],
                [
                    "MATH 225",
                    "MATH 257",
                    "MATH 415",
                    "MATH 416",
                    "ASRM 406",
                    "BIOE 210"
                ]
            ]
        }
    },
    "CS 450": {
        "course_code": "450",
        "course_name": "Numerical Analysis",
        "course_hour": "3 or 4 Hours",
        "course_description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given toward graduation for both CS 450 and CS 457. ",
        "course_prerequisites": {
            "raw_text": "One of CS 101, CS 124 or CS 125; one of CS 357, MATH 257, MATH 357, MATH 415, or MATH 416; MATH 285.",
            "prerequisites": [
                [
                    "CS 101",
                    "CS 124",
                    "CS 125"
                ],
                [
                    "CS 357",
                    "MATH 257",
                    "MATH 357",
                    "MATH 415",
                    "MATH 416"
                ],
                [
                    "MATH 285"
                ]
            ]
        }
    },
    "CS 457": {
        "course_code": "457",
        "course_name": "Numerical Methods II",
        "course_hour": "3 Hours",
        "course_description": "Continuation of CS 357. Orthogonalization methods for least squares, Krylov subspace methods, non-linear equations and optimization in multiple dimensions, initial and boundary value problems for ordinary and partial differential equations. 3 undergraduate hours. No graduate credit. Credit is not given toward graduation for both CS 457 and CS 450. ",
        "course_prerequisites": {
            "raw_text": "CS 357 or MATH 357.",
            "prerequisites": [
                [
                    "CS 357",
                    "MATH 357"
                ]
            ]
        }
    },
    "CS 460": {
        "course_code": "460",
        "course_name": "Security Laboratory",
        "course_hour": "3 or 4 Hours",
        "course_description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 461 or ECE 422.",
            "prerequisites": [
                [
                    "CS 461",
                    "ECE 422"
                ]
            ]
        }
    },
    "CS 461": {
        "course_code": "461",
        "course_name": "Computer Security I",
        "course_hour": "4 Hours",
        "course_description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "One of CS 241, CS 341, or ECE 391.",
            "prerequisites": [
                [
                    "CS 241",
                    "CS 341",
                    "ECE 391"
                ]
            ]
        }
    },
    "CS 463": {
        "course_code": "463",
        "course_name": "Computer Security II",
        "course_hour": "3 or 4 Hours",
        "course_description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 461. Recommended: CS 475.",
            "prerequisites": [
                [
                    "CS 461"
                ],
                [
                    "CS 475"
                ]
            ]
        }
    },
    "CS 464": {
        "course_code": "464",
        "course_name": "Topics in Societal and Ethical Impacts of Computer Technology",
        "course_hour": "3 Hours",
        "course_description": "Topics selected from key current areas of impact of computer technology on aspects of society and ethics such as: freedom versus the rule of law in cyberspace; social discourse; privacy; livelihoods and automation; fairness; security; political change; business models; technology divide. 3 undergraduate hours. No graduate credit. May be repeated if topics vary. Credit is not given towards a degree from multiple offerings of this course, if those offerings have significant overlap, as determined by the CS department. ",
        "course_prerequisites": {
            "raw_text": "CS 225. One of CS 210 or CS 211 or ECE 316 or PHIL 316. One of CS 361 or STAT 400 or STAT 200. Restricted to students with senior standing.",
            "prerequisites": [
                [
                    "CS 225",
                    "CS 210",
                    "CS 211",
                    "ECE 316",
                    "PHIL 316",
                    "CS 361",
                    "STAT 400",
                    "STAT 200"
                ]
            ]
        }
    },
    "CS 465": {
        "course_code": "465",
        "course_name": "User Interface Design",
        "course_hour": "4 Hours",
        "course_description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 4 undergraduate hours. 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225.",
            "prerequisites": [
                [
                    "CS 225"
                ]
            ]
        }
    },
    "CS 466": {
        "course_code": "466",
        "course_name": "Introduction to Bioinformatics",
        "course_hour": "3 or 4 Hours",
        "course_description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225.",
            "prerequisites": [
                [
                    "CS 225"
                ]
            ]
        }
    },
    "CS 467": {
        "course_code": "467",
        "course_name": "Social Visualization",
        "course_hour": "3 or 4 Hours",
        "course_description": "Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225.",
            "prerequisites": [
                [
                    "CS 225"
                ]
            ]
        }
    },
    "CS 468": {
        "course_code": "468",
        "course_name": "Tech and Advertising Campaigns",
        "course_hour": "3 Hours",
        "course_description": "Same as ADV 492. See ADV 492.",
        "course_prerequisites": {
            "raw_text": "",
            "prerequisites": []
        }
    },
    "CS 469": {
        "course_code": "469",
        "course_name": "Computational Advertising Infrastructure",
        "course_hour": "3 or 4 Hours",
        "course_description": "Thorough coverage of technologies including web-search, auctions, behavioral targeting, mechanisms for viral marketing, that underpin the display of advertisements on a variety of locations (e.g., ads on search engines; display ads). Students shall also learn about emerging areas in computational advertising including location-based adverting and algorithmic synthesis of personalized advertisements. Discussion around privacy will be a significant focus of the class. Same as ADV 462. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 173; CS 225; one of MATH 225, MATH 257, MATH 415, MATH 416, ASRM 406 or BIOE 210; one of CS 361, STAT 361, ECE 313, MATH 362, MATH 461, MATH 463 or STAT 400.",
            "prerequisites": [
                [
                    "CS 173"
                ],
                [
                    "CS 225"
                ],
                [
                    "MATH 225",
                    "MATH 257",
                    "MATH 415",
                    "MATH 416",
                    "ASRM 406",
                    "BIOE 210"
                ],
                [
                    "CS 361",
                    "STAT 361",
                    "ECE 313",
                    "MATH 362",
                    "MATH 461",
                    "MATH 463",
                    "STAT 400"
                ]
            ]
        }
    },
    "CS 470": {
        "course_code": "470",
        "course_name": "Social and Information Networks",
        "course_hour": "3 or 4 Hours",
        "course_description": "Social networks, auctions, and stock-markets appear to be very different phenomena, but they share a common foundation--the science of networks. The learning goal: to provide a broad, accessible introduction to the foundations of network science. We shall draw on ideas from mathematical sociology, and from game theory to understand strategic interaction over networks. We shall develop algorithms to identify network properties, and models for explaining network dynamics, including viral behavior. 3 undergraduate hours. 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225; CS 173; one of CS 361, STAT 361, ECE 313, MATH 362, MATH 461, MATH 463 or STAT 400; one of MATH 225, MATH 257, MATH 415, MATH 416, ASRM 406, or BIOE 210.",
            "prerequisites": [
                [
                    "CS 225"
                ],
                [
                    "CS 173"
                ],
                [
                    "CS 361",
                    "STAT 361",
                    "ECE 313",
                    "MATH 362",
                    "MATH 461",
                    "MATH 463",
                    "STAT 400"
                ],
                [
                    "MATH 225",
                    "MATH 257",
                    "MATH 415",
                    "MATH 416",
                    "ASRM 406",
                    "BIOE 210"
                ]
            ]
        }
    },
    "CS 473": {
        "course_code": "473",
        "course_name": "Algorithms",
        "course_hour": "4 Hours",
        "course_description": "Design and analysis techniques, approximation algorithms, randomized algorithms and amortized analysis, and advanced topics such as network flow, linear programming, and dynamic data structures, among others. Same as CSE 414 and MATH 473. 4 undergraduate hours. 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 374 or ECE 374, and one of CS 361, STAT 361, ECE 313, MATH 362, MATH 461, MATH 463 or STAT 400.",
            "prerequisites": [
                [
                    "CS 374",
                    "ECE 374",
                    "CS 361",
                    "STAT 361",
                    "ECE 313",
                    "MATH 362",
                    "MATH 461",
                    "MATH 463",
                    "STAT 400"
                ]
            ]
        }
    },
    "CS 474": {
        "course_code": "474",
        "course_name": "Logic in Computer Science",
        "course_hour": "3 or 4 Hours",
        "course_description": "An introduction to mathematical logic from the perspective of computer science, emphasizing both computable aspects of logic, especially automated reasoning, as well as applications of logic to computer science in artificial intelligence, databases, formal methods, and theoretical computer science. Prepares students to use logic as a formal tool to solve problems in computer science and AI. Topics include: syntax, semantics and proofs for propositional and first order logic, the decidable logics and efficient realizations in terms of SAT/SMT solvers, decision and semi-decision procedures for first order logic and several first order logic theories, finite model theory and descriptive complexity. Additional topics include: connections between logic and machine learning, higher order logics, applications of logic to program verification, applications of logic in knowledge representation, proof complexity, modal and temporal logic, Courcelle's theorem and its applications in parameterized complexity, logic and its role in automatic program synthesis, connections between logic and database query languages. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 173; CS 225; one of CS 374 or ECE 374.",
            "prerequisites": [
                [
                    "CS 173"
                ],
                [
                    "CS 225"
                ],
                [
                    "CS 374",
                    "ECE 374"
                ]
            ]
        }
    },
    "CS 475": {
        "course_code": "475",
        "course_name": "Formal Models of Computation",
        "course_hour": "3 or 4 Hours",
        "course_description": "Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity. Same as MATH 475. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 374 or ECE 374.",
            "prerequisites": [
                [
                    "CS 374",
                    "ECE 374"
                ]
            ]
        }
    },
    "CS 476": {
        "course_code": "476",
        "course_name": "Program Verification",
        "course_hour": "3 or 4 Hours",
        "course_description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225; one of CS 374, ECE 374 or MATH 414.",
            "prerequisites": [
                [
                    "CS 225"
                ],
                [
                    "CS 374",
                    "ECE 374",
                    "MATH 414"
                ]
            ]
        }
    },
    "CS 477": {
        "course_code": "477",
        "course_name": "Formal Software Development Methods",
        "course_hour": "3 or 4 Hours",
        "course_description": "Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 225; one of CS 374, ECE 374 or MATH 414.",
            "prerequisites": [
                [
                    "CS 225"
                ],
                [
                    "CS 374",
                    "ECE 374",
                    "MATH 414"
                ]
            ]
        }
    },
    "CS 481": {
        "course_code": "481",
        "course_name": "Advanced Topics in Stochastic Processes & Applications",
        "course_hour": "3 or 4 Hours",
        "course_description": "Same as IE 410. See IE 410.",
        "course_prerequisites": {
            "raw_text": "",
            "prerequisites": []
        }
    },
    "CS 482": {
        "course_code": "482",
        "course_name": "Simulation",
        "course_hour": "3 or 4 Hours",
        "course_description": "Same as IE 413. See IE 413.",
        "course_prerequisites": {
            "raw_text": "",
            "prerequisites": []
        }
    },
    "CS 483": {
        "course_code": "483",
        "course_name": "Applied Parallel Programming",
        "course_hour": "4 Hours",
        "course_description": "Same as CSE 408 and ECE 408. See ECE 408.",
        "course_prerequisites": {
            "raw_text": "",
            "prerequisites": []
        }
    },
    "CS 484": {
        "course_code": "484",
        "course_name": "Parallel Programming",
        "course_hour": "3 or 4 Hours",
        "course_description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. ",
        "course_prerequisites": {
            "raw_text": "CS 241 or CS 341.",
            "prerequisites": [
                [
                    "CS 241",
                    "CS 341"
                ]
            ]
        }
    },
    "CS 491": {
        "course_code": "491",
        "course_name": "Seminar",
        "course_hour": "0 to 4 Hours",
        "course_description": "Seminar on topics of current interest as announced in the Class Schedule. 0 to 4 undergraduate hours. 0 to 4 graduate hours. Approved for S/U grading only. May be repeated in the same or separate terms if topics vary to a maximum of 4 hours. ",
        "course_prerequisites": {
            "raw_text": "As specified for each topic offering, see Class Schedule or departmental course description.",
            "prerequisites": [
                []
            ]
        }
    },
    "CS 492": {
        "course_code": "492",
        "course_name": "Senior Project I",
        "course_hour": "3 Hours",
        "course_description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. CS 492 must be taken as a sequence with either CS 493 or CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 492 and a project course in another engineering department for the same project. ",
        "course_prerequisites": {
            "raw_text": "For Computer Science majors with senior standing.",
            "prerequisites": []
        }
    },
    "CS 493": {
        "course_code": "493",
        "course_name": "Senior Project II, ACP",
        "course_hour": "3 Hours",
        "course_description": "Continuation of CS 492. Identical to CS 494 except for an additional writing component. See CS 494. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 493 and a project course in another engineering department for the same project. ",
        "course_prerequisites": {
            "raw_text": "CS 492.This course satisfies the General Education Criteria for:Advanced Composition",
            "prerequisites": [
                [
                    "CS 492"
                ]
            ]
        }
    },
    "CS 494": {
        "course_code": "494",
        "course_name": "Senior Project II",
        "course_hour": "3 Hours",
        "course_description": "Continuation of CS 492. 3 undergraduate hours. No graduate credit. Credit is not given for both CS 494 and a project course in another engineering department for the same project. ",
        "course_prerequisites": {
            "raw_text": "CS 492.",
            "prerequisites": [
                [
                    "CS 492"
                ]
            ]
        }
    },
    "CS 497": {
        "course_code": "497",
        "course_name": "CS Team Project",
        "course_hour": "1 to 3 Hours",
        "course_description": "Student teams work with CS faculty to complete a significant project requiring advanced knowledge of CS principles. Project topics vary. 1 to 3 undergraduate hours. No graduate credit. May be repeated in the same term up to 6 hours, if topics vary; may be repeated in separate terms. ",
        "course_prerequisites": {
            "raw_text": "For majors only; junior or senior standing required.",
            "prerequisites": [
                []
            ]
        }
    },
    "CS 498": {
        "course_code": "498",
        "course_name": "Special Topics",
        "course_hour": "1 to 4 Hours",
        "course_description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.",
        "course_prerequisites": {
            "raw_text": "",
            "prerequisites": []
        }
    },
    "CS 499": {
        "course_code": "499",
        "course_name": "Senior Thesis",
        "course_hour": "3 Hours",
        "course_description": "Research and thesis development experience in computer science under guidance of a faculty member. Literature search, oral presentation, analysis and implementation, paper preparation, and completion of a written thesis. 3 undergraduate hours. No graduate credit. May be repeated to a maximum of 6 hours. ",
        "course_prerequisites": {
            "raw_text": "Consent of instructor.This course satisfies the General Education Criteria for:Advanced Composition",
            "prerequisites": [
                [
                    "consent of instructor"
                ]
            ]
        }
    }
}